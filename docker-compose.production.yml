version: '3.8'

services:
  db:
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_USER=${DB_USER:-mastodon}
      - POSTGRES_DB=${DB_NAME:-mastodon_production}

  redis:
    restart: always
    volumes:
      - redis_data:/data

  web:
    image: ghcr.io/material-lab-io/troupex-web:main
    restart: always
    env_file: mastodon/.env.production
    command: bundle exec puma -C config/puma.rb
    networks:
      - external_network
      - internal_network
    ports:
      - "127.0.0.1:3000:3000"
    depends_on:
      - db
      - redis
    volumes:
      - ./mastodon/public/system:/mastodon/public/system
      - ./mastodon/public/assets:/mastodon/public/assets
      - ./mastodon/public/packs:/mastodon/public/packs
    healthcheck:
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:3000/health || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  streaming:
    image: ghcr.io/material-lab-io/troupex-streaming:main
    restart: always
    env_file: mastodon/.env.production
    command: node ./streaming/index.js
    networks:
      - external_network
      - internal_network
    ports:
      - "127.0.0.1:4000:4000"
    depends_on:
      - db
      - redis
    healthcheck:
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  sidekiq:
    image: ghcr.io/material-lab-io/troupex-web:main
    restart: always
    env_file: mastodon/.env.production
    command: bundle exec sidekiq -c 25
    networks:
      - external_network
      - internal_network
    depends_on:
      - db
      - redis
    volumes:
      - ./mastodon/public/system:/mastodon/public/system
      - ./mastodon/public/assets:/mastodon/public/assets
      - ./mastodon/public/packs:/mastodon/public/packs
    healthcheck:
      test: ['CMD-SHELL', "ps aux | grep '[s]idekiq' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Elasticsearch for full-text search
  # es:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.17.4
  #   restart: always
  #   environment:
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #     - "cluster.name=troupex-es"
  #     - "discovery.type=single-node"
  #     - "xpack.security.enabled=false"
  #     - "xpack.monitoring.enabled=false"
  #     - "xpack.graph.enabled=false"
  #     - "xpack.watcher.enabled=false"
  #   networks:
  #     - internal_network
  #   volumes:
  #     - es_data:/usr/share/elasticsearch/data
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   healthcheck:
  #     test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

networks:
  external_network:
    name: troupex_external
    external: true
  internal_network:
    name: troupex_internal
    external: true

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  # es_data:
  #   driver: local