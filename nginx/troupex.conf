map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

upstream web {
  server 127.0.0.1:3000 fail_timeout=0;
}

upstream streaming {
  server 127.0.0.1:4000 fail_timeout=0;
}

# Rate limiting
limit_req_zone $binary_remote_addr zone=api:10m rate=5r/s;
limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=media:10m rate=10r/s;

server {
  listen 80;
  listen [::]:80;
  server_name your-domain.com;
  
  # Redirect all HTTP traffic to HTTPS
  return 301 https://$server_name$request_uri;
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name your-domain.com;

  # SSL configuration (managed by Certbot)
  ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  # Security headers
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header X-XSS-Protection "1; mode=block" always;
  add_header Referrer-Policy "strict-origin-when-cross-origin" always;
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
  
  # Content Security Policy
  add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss://$server_name; media-src 'self'; frame-ancestors 'none'; base-uri 'self'; form-action 'self';" always;

  root /home/deploy/troupex/mastodon/public;
  client_max_body_size 99M;

  # Logging
  access_log /var/log/nginx/troupex_access.log;
  error_log /var/log/nginx/troupex_error.log;

  # Gzip compression
  gzip on;
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml;

  location / {
    try_files $uri @proxy;
  }

  location ~ ^/(assets|avatars|emoji|headers|packs|shortcuts|sounds|system) {
    add_header Cache-Control "public, max-age=31536000, immutable";
    add_header Vary Accept;
    try_files $uri @proxy;
  }

  location ~ ^/system/ {
    add_header Cache-Control "public, max-age=604800, immutable";
    add_header X-Content-Type-Options nosniff;
    add_header Content-Security-Policy "default-src 'none'; form-action 'none'";
    try_files $uri @proxy;
  }

  location ^~ /api {
    limit_req zone=api burst=10 nodelay;
    try_files $uri @proxy;
  }

  location = /api/v1/accounts {
    limit_req zone=login burst=5 nodelay;
    try_files $uri @proxy;
  }

  location ^~ /media {
    limit_req zone=media burst=20 nodelay;
    try_files $uri @proxy;
  }

  location @proxy {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Proxy "";
    
    proxy_pass_header Server;
    proxy_buffering on;
    proxy_redirect off;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    
    proxy_cache_bypass $http_upgrade;
    
    tcp_nodelay on;
    
    proxy_pass http://web;
  }

  location /api/v1/streaming {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Proxy "";
    
    proxy_buffering off;
    proxy_redirect off;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    
    tcp_nodelay on;
    
    proxy_pass http://streaming;
  }

  # Health check endpoint
  location = /health {
    access_log off;
    proxy_pass http://web;
  }

  error_page 404 500 501 502 503 504 /500.html;
}