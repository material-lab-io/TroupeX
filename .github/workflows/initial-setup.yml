name: Initial Droplet Setup

on:
  workflow_dispatch:
    inputs:
      droplet_ip:
        description: 'DigitalOcean Droplet IP'
        required: true
        default: '159.89.169.132'

jobs:
  setup:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup droplet via root access
      env:
        DROPLET_IP: ${{ github.event.inputs.droplet_ip }}
      run: |
        # Create setup script
        cat > remote-setup.sh << 'EOF'
        #!/bin/bash
        set -euo pipefail
        
        echo "ðŸš€ Starting TroupeX droplet setup..."
        
        # Update system
        apt-get update && apt-get upgrade -y
        
        # Install required packages
        apt-get install -y \
          curl git vim htop ufw fail2ban \
          software-properties-common apt-transport-https \
          ca-certificates gnupg lsb-release \
          postgresql-client redis-tools nginx certbot \
          python3-certbot-nginx
        
        # Install Docker
        if ! command -v docker &> /dev/null; then
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
          apt-get update
          apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
        fi
        
        # Create deploy user
        if ! id -u deploy >/dev/null 2>&1; then
          useradd -m -s /bin/bash deploy
          usermod -aG sudo,docker deploy
          echo "deploy ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/deploy
        fi
        
        # Setup SSH for deploy user
        mkdir -p /home/deploy/.ssh
        chmod 700 /home/deploy/.ssh
        
        # Add GitHub Actions public key
        echo "$GITHUB_ACTIONS_PUBLIC_KEY" > /home/deploy/.ssh/authorized_keys
        chmod 600 /home/deploy/.ssh/authorized_keys
        chown -R deploy:deploy /home/deploy/.ssh
        
        # Setup application directory
        mkdir -p /home/deploy/troupex/{mastodon,scripts,backups,logs}
        chown -R deploy:deploy /home/deploy/troupex
        
        # Clone repository as deploy user
        sudo -u deploy bash -c "cd /home/deploy/troupex && git clone https://github.com/material-lab-io/TroupeX.git . || git pull origin main"
        
        # Create necessary directories
        sudo -u deploy mkdir -p /home/deploy/troupex/mastodon/public/{system,assets,packs}
        
        # Configure firewall
        ufw --force enable
        ufw allow 22/tcp
        ufw allow 80/tcp
        ufw allow 443/tcp
        ufw allow 3000/tcp
        
        # Configure swap
        if ! swapon --show | grep -q swap; then
          fallocate -l 4G /swapfile
          chmod 600 /swapfile
          mkswap /swapfile
          swapon /swapfile
          echo '/swapfile none swap sw 0 0' | tee -a /etc/fstab
          sysctl vm.swappiness=10
          echo 'vm.swappiness=10' >> /etc/sysctl.conf
        fi
        
        # Create Docker networks
        docker network create troupex_external || true
        docker network create troupex_internal || true
        
        echo "âœ… Droplet setup complete!"
        echo "Deploy user created with Docker access"
        echo "Application directory: /home/deploy/troupex"
        EOF
        
        # Generate SSH key for GitHub Actions
        ssh-keygen -t ed25519 -C "github-actions@troupex-auto" -f github-actions-key -N ""
        
        # Show the keys
        echo "::group::SSH Keys Generated"
        echo "Save this private key as SSH_PRIVATE_KEY secret:"
        echo "---"
        cat github-actions-key
        echo "---"
        echo "::endgroup::"
        
        # Set public key for remote setup
        export GITHUB_ACTIONS_PUBLIC_KEY=$(cat github-actions-key.pub)
        
        # Note: For the initial setup, you need root access
        # Add your root SSH key to the droplet first, then run this workflow
        echo ""
        echo "ðŸ“‹ Manual Step Required:"
        echo "1. SSH to your droplet as root: ssh root@${DROPLET_IP}"
        echo "2. Run this command:"
        echo ""
        echo "curl -fsSL https://raw.githubusercontent.com/material-lab-io/TroupeX/main/scripts/setup-droplet.sh | bash"
        echo ""
        echo "3. Add this public key to /home/deploy/.ssh/authorized_keys:"
        echo "$GITHUB_ACTIONS_PUBLIC_KEY"
        echo ""
        echo "4. Then add these GitHub Secrets:"
        echo "   - DROPLET_IP: ${DROPLET_IP}"
        echo "   - DROPLET_USER: deploy"
        echo "   - SSH_PRIVATE_KEY: (shown above)"
        echo "   - KNOWN_HOSTS: Run 'ssh-keyscan -H ${DROPLET_IP}'"